#include<iostream>
#include<string>
#define MAX 1000
using namespace std;

//封装函数显示菜单界面
void showMenu()
{
	cout << "*************************" << endl;
	cout << "***** 1.添加联系人  *****" << endl;
	cout << "***** 2.显示联系人  *****" << endl;
	cout << "***** 3.删除联系人  *****" << endl;
	cout << "***** 4.查找联系人  *****" << endl;
	cout << "***** 5.修改联系人  *****" << endl;
	cout << "***** 6.清空联系人  *****" << endl;
	cout << "***** 0.退出通讯录  *****" << endl;
	cout << "*************************" << endl;
}



//设计联系人结构体
struct Person
{
	//姓名
	string m_Name;
	//性别 1 男 2 女
	int m_Sex;
	//年龄
	int m_Age;
	//电话
	string m_Phone;
	//住址
	string m_Addr;
};


//设计通讯录结构体
struct Addressbooks
{
	//通讯录中保存的联系人数组
	struct Person personArray[MAX];

	//通讯录当前记录的联系人的个数
	int m_Size;
};


//1.添加联系人
void addPerson(Addressbooks* abs)
{
	//判断通讯录是否已满
	if (abs->m_Size == MAX)
	{
		cout << "通讯录已满，无法添加" << endl;
	}
	else
	{
		//添加联系人

		//姓名
		string  name;
		cout << "请输入姓名" << endl;
		cin >> name;
		abs->personArray[abs->m_Size].m_Name = name;
		//性别
		cout << "请输入性别" << endl;
		cout << "1.男  2.女" << endl;
		int sex = 0;

		while (true)
		{//如果输入1或2可以退出循环 输入有误 重新输入
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[abs->m_Size].m_Sex = sex;
				break;
			}
			cout << "输入有误，重新输入" << endl;
		}


		//年龄
		cout << "请输入年龄" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[abs->m_Size].m_Age = age;

		//电话
		cout << "请输入电话" << endl;
		string  phone;
		cin >> phone;
		abs->personArray[abs->m_Size].m_Phone = phone;

		//家庭地址
		cout << "请输入家庭地址" << endl;
		string  address;
		cin >> address;
		abs->personArray[abs->m_Size].m_Addr = address;

		//更新通讯录人数
		abs->m_Size++;

		cout << "添加成功" << endl;

		system("pause");
		system("cls");//清屏操作
	}
}

//2.显示联系人
void showPerson(Addressbooks* abs)
{
	//判断通讯录中人数是否为0，不为0则显示
	if	(abs->m_Size==0)
	{
		cout<<"当前记录为空" << endl;
	} 
	else
	{
		for (int i = 0; i < abs->m_Size; i++)
		{
			cout << "姓名" <<abs->personArray[i].m_Name << endl;
			cout << "性别" <<( abs->personArray[i].m_Sex ==1?"男" :"女") << endl;
			cout << "年龄" << abs->personArray[i].m_Age << endl;
			cout << "电话" << abs->personArray[i].m_Phone << endl;
			cout << "住址" << abs->personArray[i].m_Addr << endl;
		}
	}
	system("pause");
	system("cls");//清屏操作
}


  //检测联系人是否存在，存在返回联系人所在数组中的位置，不存在返回-1
int  isexit(Addressbooks* abs, string name) //参数1通讯录 参数2 对比姓名
{
	for (int i = 0; i < abs->m_Size; i++)
	{
		//找到用户
		if (abs->personArray[i].m_Name==name )
		{
			return i;
		}
	}
	return -1;
}


//3.删除联系人
void deletePerson(Addressbooks* abs)
{
	cout << "输入要删除的联系人" << endl;

	string name;
	cin >> name;

	int rec=isexit(abs, name);
	if (rec!=-1)
	{
		//查到人 进行删除
		for (int i =rec; i < abs->m_Size; i++)
		{
			//数据前移
			abs->personArray[i] = abs->personArray[i + 1];
		}
		abs->m_Size--;
		cout << "删除成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");//清屏操作
}

//4.查找联系人
void findPerson(Addressbooks* abs)
{
	cout<<"输入要查找的联系人" << endl;
	string name;
	cin >> name;
	//判断联系人是否存在
	int ret = isexit(abs, name);
	 
	if (ret!=-1)
	{
		cout << "姓名" << abs->personArray[ret].m_Name << endl;
		cout << "性别" << (abs->personArray[ret].m_Sex == 1 ? "男" : "女") << endl;
		cout << "年龄" << abs->personArray[ret].m_Age << endl;
		cout << "电话" << abs->personArray[ret].m_Phone << endl;
		cout << "住址" << abs->personArray[ret].m_Addr << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");//清屏操作
}

//5.修改联系人
void modifyPerson(Addressbooks* abs)
{
	cout << "输入要修改的联系人" << endl;
	string name;
	cin >> name;
	//判断联系人是否存在
	int ret = isexit(abs, name);
	if (ret != -1)//找到联系人
	{
		//修改的项目
		//姓名
		string  name;
		cout << "请输入姓名" << endl;
		cin >> name;
		abs->personArray[ret].m_Name = name;
		//性别
		cout << "请输入性别" << endl;
		cout << "1.男  2.女" << endl;
		int sex = 0;

		while (true)
		{//如果输入1或2可以退出循环 输入有误 重新输入
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->personArray[ret].m_Sex = sex;
				break;
			}
			cout << "输入有误，重新输入" << endl;
		}
		//年龄
		cout << "请输入年龄" << endl;
		int age = 0;
		cin >> age;
		abs->personArray[ret].m_Age = age;

		//电话
		cout << "请输入电话" << endl;
		string  phone;
		cin >> phone;
		abs->personArray[ret].m_Phone = phone;

		//家庭地址
		cout << "请输入家庭地址" << endl;
		string  address;
		cin >> address;
		abs->personArray[ret].m_Addr = address;

		cout<<"修改成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");//清屏操作
}

//6.清空联系人
void cleanPerson(Addressbooks* abs)
{
	abs->m_Size = 0;
	cout<<"已清空" << endl;
	system("pause");
	system("cls");//清屏操作
}



int main()
{

	//创建通讯录结构体变量
	Addressbooks abs;
	//初始化通讯录中当前人员个数
	abs.m_Size = 0;

	//创建用户选择输入的变量
	int select = 0;

	while (true)
	{
		//菜单调用
		showMenu();

		cin >> select;

		switch (select)
		{
			case 1://1.添加联系人
				addPerson(&abs);
				break;
			case 2://2.显示联系人
				showPerson(&abs);
				break;
			case 3://3.删除联系人
				deletePerson(&abs);
				break;
			case 4://4.查找联系人
				findPerson(&abs);
				break;
			case 5://5.修改联系人
				modifyPerson(&abs);
				break;
			case 6://6.清空联系人
				cleanPerson(&abs);
				break;
			case 0://0.退出通讯录
				cout<<"欢迎下次使用" << endl;
				system("pause ");
				return 0;
				break;

			default:
				break;
		}
	}


	system("pause ");
	return 0 ;


	system("pause ");
	return 0;	system("pause ");
	return 0;	system("pause ");
	return 0;	system("pause ");
	return 0;	system("pause ");
	return 0;	system("pause ");
	return 0;	system("pause ");
	return 0;



}




































